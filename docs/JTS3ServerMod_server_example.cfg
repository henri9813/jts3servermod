# Config file of the JTS3ServerMod
# http://www.stefan1200.de
# This file must be saved with the ANSI encoding ISO-8859-1!

# Teamspeak 3 server address
ts3_server_address = ts3.server.net
# Teamspeak 3 server query port, default is 10011 (raw) and 10022 (ssh)
ts3_server_query_port = 10011
# Teamspeak 3 server query admin account name
ts3_server_query_login = serveradmin
# Teamspeak 3 server query admin password
ts3_server_query_password = password
# Teamspeak 3 server query mode, possible values: raw and ssh
# raw = The default unencrypted way to connect to the TS3 server.
# ssh = The communication to the TS3 server will be encrypted. Possible since TS3 server version 3.3.0 and needs to be activated at the TS3 server.
ts3_server_query_mode = raw
# Teamspeak 3 virtual server ID or -1 to use ts3_virtualserver_port
ts3_virtualserver_id = -1
# Teamspeak 3 virtual server port, only needed if ts3_virtualserver_id is set to -1
ts3_virtualserver_port = 9987

# Channel id, the bot will join into it after connecting. If not wanted, use a negative number like -1.
# Don't set the default channel here, because the bot is already in the default channel after connecting.
bot_channel_id = -1
# Activate the slow mode of the bot, 0 = disable, 1 = enable.
# If slow mode is activated, the bot connects slower to the server
# and disables some bot features to reduce the amount of needed commands.
# This feature may allow you to use the bot without whitelist the bot IP address.
# Slow mode disables the client database list cache and do not allow the bot check interval to be lower than 3 seconds.
bot_slowmode = 0
# Check every X seconds, default is 1. Values between 1 and 30 are allowed.
# If slow mode is activated, 3 is the lowest possible value.
bot_check_interval = 1
# A different encoding of the messages config files.
# Default is UTF-8 which should be good for all EU and US languages.
# Change this only if you know what you are doing!
# For English or German language you can also use the encoding ISO-8859-1
# A list of all valid ones: http://docs.oracle.com/javase/1.5.0/docs/guide/intl/encoding.doc.html
bot_messages_encoding = UTF-8
# This enables the client database list cache. This cache is needed for commands like !searchip or !searchdesc. 1 = Enable, 0 = Disable
bot_clientdblist_cache = 1
# This enables the global message variables. See readme file for a list of variables. 1 = Enable, 0 = Disable
# If enabled, you can use all server variables in all messages. If not needed, disable this to save performance.
bot_global_message_vars = 0
# Server Query name, this will be displayed as name of the connection.
bot_server_query_name = JTS3ServerMod
# Second Server Query name, this will be displayed as name of the connection.
# This name will be used, if the first name is already in use.
bot_server_query_name_2 = MyJTS3ServerMod
# Change the date pattern, which will be used to format a date in chat functions and welcome message.
# To get help how to make such a pattern, look here: http://docs.oracle.com/javase/1.5.0/docs/api/java/text/SimpleDateFormat.html
bot_date_pattern = yyyy-MM-dd HH:mm:ss
# Change the timezone of the bot, which will be used for the date of the chat functions and welcome message.
# If nothing is set here, the default timezone of the operating system will be used.
# To get a list of valid timezones, look at the TZ column on the following page:
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List
bot_timezone = 
# Should the bot try to connect forever if the Teamspeak server or the bot is offline? 0 = disable, 1 = enable
bot_connect_forever = 0
# Minimum log level, how much details you want to be written to the bot log files? Default is 1.
# Higher log levels will be also written, as an example: You set log level to 2, level 2, 3 and critical errors will be written to bot log file.
# 0 = Debug
# 1 = Information (recommended and default)
# 2 = Warning (recommended for smaller log files)
# 3 = Error (experts only)
bot_log_level = 1
# A comma separated list (without spaces) of unique user ids, which should be able to use bot admin commands.
# The unique user ids looks like this: mBbHRXwDAG7R19Rv3PorhMwbZW4=
bot_admin_list = 
# A comma separated list (without spaces) of server group ids, which should be able to use the following bot admin commands:
# !channellist, !listchannelgroups, !listinactiveclients, !listinactivechannels, !listservergroups, !msgchannelgroup, !msgservergroup, !pokechannelgroup,
# !pokeservergroup, !removeservergroups, !removechannelgroups, !searchclient, !searchdesc, !searchip, !setchannelgroup and !setchannelname.
# All other bot admin commands are not allowed!
bot_lightadmingroup_list = 

# Set a comma separated list (without spaces) of needed bot functions here.
# Each function needs the function class (or plugin filename) and the function name, both separated with a colon.
# All possible function classes are listed below, that class is case sensitive!
# You can use external functions, they have to be in the plugins directory and you have to use the filename
# including the jar file extension as function class, as an example: AutoKickTimer.jar:akt
# That function name you choose is important and has to be unique. It will be used as prefix for the configuration key names and chat commands.
# Don't use spaces in the function names, only use letters, numbers, minus and underscore!
# Most functions allow multiple usage, that allows you to set as many welcome messages or idle check rules, as you want.
# Don't forget that you have to put all settings of the functions in this file.
# Hint: Start the bot with the argument -updateconfig after adding bot functions, that writes the configuration for all functions into this file!
# Whole command: java -jar JTS3ServerMod.jar -updateconfig
# Notice: This -updateconfig will also delete all lines of removed or renamed functions in this config file!
# For more information about the functions read documents/ConfigHelp.html or documents/ConfigHelp_deutsch.html!
# 
# Example: IdleCheck:idle,IdleCheck:idle_guest,MuteMover:mute,WelcomeMessage:welcome,WelcomeMessage:welcome_guest
# This example gives you the following:
# - Two IdleCheck with the name idle and idle_guest
# - One MuteMover with the name mute
# - Two WelcomeMessage with the name welcome and welcome_guest
# 
# Function list (multiple use possible):
# Advertising - Send messages to channel or server chat every X minutes
# AutoMove - Move connecting clients of a specified server group to a specified channel
# AwayMover - Move the client as soon as away status is set for longer than X seconds
# BadChannelNameCheck - Checking for bad channel names, can delete the channel and punish the client
# BadNicknameCheck - Checking for bad nicknames and can punish the client
# ChannelNotify - Notify specified server groups about clients joining a specified channel
# IdleCheck - Move or kick an idle client, can also send an idle warning message
# InactiveChannelCheck - Delete channels if empty for more than X hours
# InactiveClientsCleaner - Deletes clients (including permissions) from the TS3 database after X days inactivity (client database list cache must be enabled!)
# LastSeen - Chat command to check the last online time of a client
# MuteMover - Move the client as soon as the specified mute status is set for longer than X seconds
# RecordCheck - Move or kick a recording client (of course only the record function of the Teamspeak client is detected)
# ServerGroupNotify - Notify specified server groups about clients of specified server groups connecting to the TS3 server
# ServerGroupProtection - Make sure that only specified clients are members of the specified server groups
# WelcomeMessage - Sends a message to new connected clients
bot_functions = Advertising:advertising,AutoMove:automove,AwayMover:away,BadChannelNameCheck:badchannelname,BadNicknameCheck:badnickname,ChannelNotify:channelnotify,IdleCheck:idle,InactiveChannelCheck:icc,InactiveClientsCleaner:cleaner,LastSeen:lastseen,MuteMover:mute,RecordCheck:record,ServerGroupNotify:servergroupnotify,ServerGroupProtection:servergroupprotection,WelcomeMessage:welcome,WelcomeMessage:welcome_guest
# Set a comma separated list (without spaces) of needed but disabled bot functions here.
# Same format as bot_functions!
# All functions you set here are not activated at bot start, but you can switch on functions using chat commands.
bot_functions_disabled = 


# Is the target of the advertising messages a channel or a server? Possible values (just write one of the both words!): channel or server
advertising_mode = server
# If a channel is the target, set channel id to write advertising message into it
advertising_channel_id = 
# Advertise every X minutes
advertising_repeat_time = 30
# Path to file which contains the advertising messages.
advertising_file = %apphome%config/server1/advertising.cfg

# A comma separated list (without spaces) of platform names (it's the same value as %CLIENT_PLATFORM% at the welcome message).
# Only selected platforms will be moved or leave this empty to move all platforms.
# Possible platforms: Windows, Mac, Linux, Android, iOS
automove_platform_list = 
# Select the message mode, how the clients should get the message.
# poke, chat or none are valid values!
automove_message_mode = chat
# Path to file which contains the auto move configuration and message.
automove_file = %apphome%config/server1/automove.cfg

# Move client back if not away anymore? Set yes or no here!
away_moveback = yes
# Channel id to move away clients into it
away_channel_id = 
# Idle time in seconds after the client with away status will be moved to the channel.
# Has between 0 and 10000 seconds!
away_delay = 5
# A comma separated list (without spaces) of channel ids.
# Depends on the given mode, this channels can be ignored or only this channels will be checked!
# If no channels should be ignored, set no channels here and select the channel list mode ignore!
away_channel_list = 
# Select one of the two modes for the channel list.
# ignore = The selected channels will be ignored.
# only = Only the selected channels will be checked.
away_channel_list_mode = ignore
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be checked!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
away_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored.
# only = Only the selected server groups will be checked.
away_group_list_mode = ignore
# Select the message mode, how the client should get the message.
# poke, chat or none are valid values!
away_message_mode = none
# Path to file which contains the away mover message
away_file = %apphome%config/server1/awaymessages.cfg

# Instantly kick client that creates a channel with a bad name? Set yes or no here!
badchannelname_kick = no
# Instantly delete a channel with a bad name? Set always, onlynew or no here!
# onlynew = Try to rename channel back first. Only if that fail (maybe channel is quite new and the old name is unknown) the channel will be deleted!
# no = Try to rename channel back, but the channel will not be deleted!
badchannelname_delete = onlynew
# A comma separated list (without spaces) of channel ids.
# This channels will be ignored!
badchannelname_channel_list = 
# Add complain entry to the user? Set yes or no here!
badchannelname_add_complain = no
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be checked!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
badchannelname_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored and can create channels with bad channel names.
# only = Only the selected server groups will be checked.
badchannelname_group_list_mode = ignore
# Select the message mode, how the client should get the message.
# poke, chat or none are valid values!
# If client kick is activated, the message will be always used as kick message!
badchannelname_message_mode = poke
# Path to file which contains the Bad Channel Name Check rules and the message.
badchannelname_file = %apphome%config/server1/badchannelname.cfg

# Kick client with a bad nickname? Set yes or no here!
badnickname_kick = yes
# Add complain entry to the user? Set yes or no here!
badnickname_add_complain = no
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be checked!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
badnickname_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored and can have bad nicknames.
# only = Only the selected server groups will be checked.
badnickname_group_list_mode = ignore
# Select the message mode, how the client should get the message.
# poke or chat are valid values!
# If client kick is activated, the message will be always used as kick message!
badnickname_message_mode = poke
# Path to file which contains the bad nickname message and check rules.
badnickname_file = %apphome%config/server1/badnickname.cfg

# Channel id that should be watched for new clients. You can only set one channel id here!
channelnotify_channel_id = 
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be watched!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
channelnotify_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored.
# only = Send a notify message only if the selected server groups join the channel.
channelnotify_group_list_mode = ignore
# A comma separated list (without spaces) of server group ids, which should be notified about new clients in the specified channel.
channelnotify_grouptargets = 
# A comma separated list (without spaces) of channel ids.
# Depends on the given mode, target clients in this channels can be ignored or only clients in this channels receive the notify message!
# If no channels should be ignored, set no channels here and select the channel list mode ignore!
channelnotify_channel_list = 
# Select one of the two modes for the channel list.
# ignore = Clients in the selected channels will be ignored.
# only = Only clients in the selected channels receive the notify message.
channelnotify_channel_list_mode = ignore
# Select the message mode, how the notified clients should get the message.
# poke or chat are valid values!
channelnotify_message_mode = poke
# Select the message mode, how the clients (who joined the channel) should get the message.
# poke, chat or none are valid values!
channelnotify_messagenotified_mode = none
# Path to file which contains the channel notify message
channelnotify_file = %apphome%config/server1/channelnotifymessages.cfg

# Set the idle warn time in minutes or set -1 to disable this feature.
idle_warn_time = -1
# Set the idle group time in minutes or set -1 to disable this feature.
# Clients will be added to the specified server group after being idle for this time!
idle_group_time = -1
# Set the idle move time in minutes or set -1 to disable this feature.
# Clients will be moved to the specified channel after being idle for this time!
idle_move_time = -1
# Set the idle kick time in minutes or set -1 to disable this feature.
# Clients will be kicked from the server after being idle for this time!
idle_kick_time = -1
# If the clients should be put into a temporary server group, set the server group id here.
# You should use a server group, which adds the server group name to the client name, so everyone can quickly see, that someone is away.
# Notice: That server group only need the following permissions (first three are set by default):
# i_group_needed_modify_power, i_group_needed_member_add_power, i_group_needed_member_remove_power and i_group_show_name_in_tree
# Important: Make sure, that the specified server group don't has set the permission b_group_is_permanent!
# You can also set -6 (sg name on the left side) or -9 (sg name on the right side) to create a new server group with the name AFK.
# This will update the bot configuration and the bot needs the permission b_virtualserver_servergroup_create one time!
idle_group_id = -1
# If the clients should be moved, set channel id to move idle clients into it.
idle_channel_id = 
# If the clients got moved, move client back if not idle anymore? Set yes or no here!
idle_moveback = no
# A comma separated list (without spaces) of channel ids.
# Depends on the given mode, this channels can be ignored or only this channels will be checked!
# If no channels should be ignored, set no channels here and select the channel list mode ignore!
idle_channel_list = 
# Select one of the two modes for the channel list.
# ignore = The selected channels will be ignored.
# only = Only the selected channels will be checked.
idle_channel_list_mode = ignore
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be checked!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
idle_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored.
# only = Only the selected server groups will be checked.
idle_group_list_mode = ignore
# A minimum client count to activate the idle check (Query clients are not counted).
# If less clients are in the channel or on the server, idle check does nothing.
idle_min_clients = 3
# Select if the minimum client count is needed in the channel or on the server.
# channel or server are valid values!
idle_min_clients_mode = server
# Select the message mode, how the client should get the warning message.
# poke or chat are valid values!
idle_warn_message_mode = chat
# If the clients should be put into the specified server group, select the message mode, how the client should get the message.
# poke, chat or none are valid values!
idle_group_message_mode = chat
# If the clients should be moved to the specified channel, select the message mode, how the client should get the message.
# poke, chat or none are valid values!
idle_move_message_mode = chat
# Path to file which contains the idle messages
idle_file = %apphome%config/server1/idlecheckmessages.cfg

# After how many hours an empty channel should be deleted? Possible values between 1 and 10000 hours.
icc_emptydeletetime = 168
# After how many hours an empty channel will be marked as inactive (a prefix will be added to the channel name)? Possible values between 1 and 10000 hours. Set to -1 to disable this feature!
icc_emptywarntime = 144
# Never delete permanent channels? Set yes or no here!
icc_ignore_permanent = yes
# Never delete semi permanent channels? Set yes or no here!
icc_ignore_semipermanent = no
# Never delete spacer channels (like [cspacer])? Set yes or no here!
icc_ignore_spacer = no
# A comma separated list (without spaces) of channel ids you like to ignore. This channels don't get deleted!
icc_ignore_channels = 
# A comma separated list (without spaces) of parent channel ids (use 0 for the top level).
# Depends on the given mode, all sub-channels of this channels can be ignored or only sub-channels of this channels will be checked!
# The check parent channel only mode allows you to check the activity only on the selected parent channels (which will be reset also on activity in sub-channels) and delete the parent channel including the sub channels, if it is detected inactive.
# If no parent channels should be ignored, set no channels here and select the channel list mode ignore!
icc_parentchannel_list = 
# Select one of the four modes for the parent channel list.
# ignore = All sub-channels of the selected channels will be ignored.
# only = Only sub-channels of the selected channels will be checked.
# parentignore = Only the parent channels will be checked (and will delete all sub channels), which are not on the list.
# parentonly = Only the parent channels will be checked (and will delete all sub channels), which are on the list.
icc_parentchannel_list_mode = ignore

# How many days a client has to be inactive to get deleted from the TS3 server database?
# Possible values are between 30 and 730.
# Notice: After the client was deleted, the client can connect again to the server, but all permissions are lost!
cleaner_inactivity_days = 180
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be checked!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
cleaner_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored.
# only = Only the selected server groups will be checked.
cleaner_group_list_mode = ignore

# Who should be able to use the last seen command? Possible values: all, botadmin, servergroup
lastseen_user = botadmin
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be allowed to use the !lastseen command!
# This is only needed, if user servergroup is selected!
lastseen_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored.
# only = Only the selected server groups are allowed to use the !lastseen command!
lastseen_group_list_mode = ignore

# Move client back if not muted anymore? Set yes or no here!
mute_moveback = yes
# Enable move, if the headphone was muted using the Teamspeak Client, yes or no
mute_headphone = no
# Enable move, if the microphone was muted using the Teamspeak Client, yes or no
mute_microphone = no
# Enable move, if the sound output hardware (for speakers/headphone) is missing or a disabled hardware is selected in the client settings.
# Set yes or no here!
mute_headphone_hardware = no
# Enable move, if the sound input hardware (for a microphone) is missing or a disabled hardware is selected in the client settings.
# This also happen, if someone is speaking on another Teamspeak server. Set yes or no here!
mute_microphone_hardware = no
# Move the client if the client has all selected conditions or at least one? Set all or one here!
mute_condition_mode = one
# Channel id to move muted clients into it
mute_channel_id = 
# Idle time in seconds after the client with a specified mute status will be moved to the channel.
# Has between 0 and 10000 seconds!
mute_delay = 5
# A comma separated list (without spaces) of channel ids.
# Depends on the given mode, this channels can be ignored or only this channels will be checked!
# If no channels should be ignored, set no channels here and select the channel list mode ignore!
mute_channel_list = 
# Select one of the two modes for the channel list.
# ignore = The selected channels will be ignored.
# only = Only the selected channels will be checked.
mute_channel_list_mode = ignore
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be checked!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
mute_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored.
# only = Only the selected server groups will be checked.
mute_group_list_mode = ignore
# Select the message mode, how the client should get the message.
# poke, chat or none are valid values!
mute_message_mode = none
# Path to file which contains the mute mover message
mute_file = %apphome%config/server1/mutemessages.cfg

# Select the action if a client starts recording, possible values: kick and move
record_action = kick
# If clients should be moved, set channel id to move recording clients into it
record_channel_id = 
# A comma separated list (without spaces) of channel ids.
# Depends on the given mode, this channels can be ignored or only this channels will be checked!
# If no channels should be ignored, set no channels here and select the channel list mode ignore!
record_channel_list = 
# Select one of the two modes for the channel list.
# ignore = The selected channels will be ignored.
# only = Only the selected channels will be checked.
record_channel_list_mode = ignore
# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups will be checked!
record_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored and are allowed to record.
# only = Only the selected server groups will be checked and punished, if they start recording.
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
record_group_list_mode = ignore
# A comma separated list (without spaces) of channel group ids.
# Depends on the given mode, this channel groups can be ignored or only this channel groups will be checked!
# If no channel groups should be ignored, set no channel groups here and select the group list mode ignore!
record_channelgroup_list = 
# Select one of the two modes for the channel group list.
# ignore = The selected channel groups will be ignored and are allowed to record.
# only = Only the selected channel groups will be checked and punished, if they start recording.
record_channelgroup_list_mode = ignore
# Add complain entry to the user? Set yes or no here!
record_add_complain = no
# If clients should be moved, select the message mode, how the client should get the message.
# poke, chat or none are valid values!
record_message_mode = poke
# Path to file which contains the record message
record_file = %apphome%config/server1/recordmessages.cfg

# A comma separated list (without spaces) of server group ids, which should be watched on joining.
servergroupnotify_groups = 
# A comma separated list (without spaces) of server group ids, which should be notified about joining clients.
servergroupnotify_grouptargets = 
# A comma separated list (without spaces) of the total connection count (it's the same value as %CLIENT_TOTALCONNECTIONS% at the welcome message),
# when this message should be send to the clients. Set this to -1 to show it every time.
# Ranges like 1-100, -20 (means 20 or less) or 100- (means 100 or more) are also possible.
servergroupnotify_showonconnectionnumber = -1
# A comma separated list (without spaces) of channel ids.
# Depends on the given mode, target clients in this channels can be ignored or only clients in this channels receive the notify message!
# If no channels should be ignored, set no channels here and select the channel list mode ignore!
servergroupnotify_channel_list = 
# Select one of the two modes for the channel list.
# ignore = Clients in the selected channels will be ignored.
# only = Only clients in the selected channels receive the notify message.
servergroupnotify_channel_list_mode = ignore
# Select the message mode, how the notified clients should get the message.
# poke, chat or none are valid values!
servergroupnotify_message_mode = poke
# Select the message mode, how the clients (who joined the server) should get the message.
# poke, chat or none are valid values!
servergroupnotify_messagenotified_mode = none
# Path to file which contains the server group notify message
servergroupnotify_file = %apphome%config/server1/servergroupnotifymessages.cfg

# A comma separated list (without spaces) of server group ids, which should be protected.
servergroupprotection_groups = 
# Enable this to kick every client which using a protected server group and are not on the list of the bot, set yes or no here!
servergroupprotection_kick = yes
# Add complaint entry to the user, set yes or no here!
# This would only add a complaint, if the bot has to remove a server group.
servergroupprotection_add_complain = no
# If a client is listed in the servergroupprotection_file and miss a server group, they get added to the server group.
# This only works for normal server groups (clients do not get added to groups like Admin Server Query)! Set yes or no here!
servergroupprotection_add_missing_groups = yes
# A comma separated list (without spaces) of server group ids, which are also allowed to use the add and remove chat commands.
# Bot admins can always use this commands!
servergroupprotection_chatcmd_group_list = 
# Select the message mode, how the client should get the message (useless if kick is enabled).
# poke, chat or none are valid values!
servergroupprotection_message_mode = poke
# Path to file which contains the Server Group Protection client list and kick message.
servergroupprotection_file = %apphome%config/server1/servergroupprotection.cfg

# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups get this welcome message!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
welcome_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored and don't get this welcome message.
# only = Only the selected server groups get this welcome message.
welcome_group_list_mode = ignore
# A comma separated list (without spaces) of the total connection count (it's the same value as %CLIENT_TOTALCONNECTIONS% at the welcome message),
# when this message should be send to the client. Set this to -1 to show it every time.
# Ranges like 1-100, -20 (means 20 or less) or 100- (means 100 or more) are also possible.
welcome_showonconnectionnumber = -1
# A comma separated list (without spaces) of platform names (it's the same value as %CLIENT_PLATFORM% at the welcome message).
# Only selected platforms get the welcome message or leave this empty to send the welcome message to all platforms.
# Possible platforms: Windows, Mac, Linux, Android, iOS
welcome_platform_list = 
# A comma separated list (without spaces) of client countries (it's the same value as %CLIENT_COUNTRY% at the welcome message, an ISO 3166-1 ALPHA-2 country code,
# like DE for Germany, US for USA and FR for France). Use ?? for clients with an unknown country code (e.g. LAN oder localhost connection to the TS3 server).
# Only selected countries get the welcome message or leave this empty to send the welcome message to clients from all countries.
# Keep in mind, that the country detection of the TS3 server is not always correct and should only be used with the newest version of the TS3 server!
welcome_clientcountry_list = 
# Select one of the two modes for the client country list.
# ignore = The selected client countries will be ignored and don't get this welcome message.
# only = Only the selected client countries get this welcome message.
welcome_clientcountry_list_mode = ignore
# Select the message mode, how the client should get the message.
# poke or chat are valid values!
welcome_message_mode = chat
# Path to file which contains the welcome message.
welcome_file = %apphome%config/server1/welcomemessages.cfg

# A comma separated list (without spaces) of server group ids.
# Depends on the given mode, this server groups can be ignored or only this server groups get this welcome message!
# If no server groups should be ignored, set no server groups here and select the group list mode ignore!
welcome_guest_group_list = 
# Select one of the two modes for the server group list.
# ignore = The selected server groups will be ignored and don't get this welcome message.
# only = Only the selected server groups get this welcome message.
welcome_guest_group_list_mode = ignore
# A comma separated list (without spaces) of the total connection count (it's the same value as %CLIENT_TOTALCONNECTIONS% at the welcome message),
# when this message should be send to the client. Set this to -1 to show it every time.
welcome_guest_showonconnectionnumber = -1
# A comma separated list (without spaces) of platform names (it's the same value as %CLIENT_PLATFORM% at the welcome message).
# Only selected platforms get the welcome message or leave this empty to send the welcome message to all platforms.
# Possible platforms: Windows, Mac, Linux, Android, iOS
welcome_guest_platform_list = 
# A comma separated list (without spaces) of client countries (it's the same value as %CLIENT_COUNTRY% at the welcome message, an ISO 3166-1 ALPHA-2 country code,
# like DE for Germany, US for USA and FR for France). Use ?? for clients with an unknown country code (e.g. LAN oder localhost connection to the TS3 server).
# Only selected countries get the welcome message or leave this empty to send the welcome message to clients from all countries.
# Keep in mind, that the country detection of the TS3 server is not always correct and should only be used with the newest version of the TS3 server!
welcome_guest_clientcountry_list = 
# Select one of the two modes for the client country list.
# ignore = The selected client countries will be ignored and don't get this welcome message.
# only = Only the selected client countries get this welcome message.
welcome_guest_clientcountry_list_mode = ignore
# Select the message mode, how the client should get the message.
# poke or chat are valid values!
welcome_guest_message_mode = chat
# Path to file which contains the welcome message.
welcome_guest_file = %apphome%config/server1/welcomemessages.cfg
